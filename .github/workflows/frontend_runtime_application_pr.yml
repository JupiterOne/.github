name: Default workflow for a runtime application when a PR is opened

on:
  workflow_call:
    inputs:
      fallback_runner:
        description: "If true will leverage ubuntu-latest, otherwise will fall back to the J1 in-house runner"
        default: false
        type: boolean
      use_validate:
        description: "Run validation, in most case we want this"
        default: true
        type: boolean
      use_chromatic:
        description: "Run VRT Storybook tests with chromatic"
        default: false
        type: boolean
      magic_url_route: 
        description: 'The relative route the magic url should go to'
        type: string
        default: '/'
    secrets:
      NPM_TOKEN:
        description: "A J1 npm.com Publish token"
        required: true
      CHROMATIC_PROJECT_TOKEN:
        description: "The Chromatic API token"
        required: false

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  migration_number:
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-arm64' }}
    outputs:
      migration: ${{ steps.migration_number.outputs.migration }}
    steps:
      - uses: actions/checkout@v3
      - id: migration_number
        name: migration_number
        uses: jupiterone/.github/.github/actions/frontend/runtime/migration_number@v3

  validate:
    # Name targeted by branch protections, do not change
    name: Validate
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-arm64' }}
    if: ${{ inputs.use_validate }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: setup_env
        uses: jupiterone/.github/.github/actions/setup_env@v3
        with:
          use_dev: true
      - name: remote_types_install
        uses: jupiterone/.github/.github/actions/frontend/runtime/remote_types_install@v3
      - name: validate
        uses: jupiterone/.github/.github/actions/validate@v3
  
  security:
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-amd64' }}
    permissions:
      actions: read
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: code_ql
        uses: jupiterone/.github/.github/actions/code_ql@v3
        with:
          language: 'javascript'

  chromatic_upload:
    # Name targeted by branch protections, do not change
    name: Visual Regression
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-arm64' }}
    if: ${{ inputs.use_chromatic }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup_env
        uses: jupiterone/.github/.github/actions/setup_env@v3
        with:
          use_dev: true
      - name: chromatic_upload
        uses: jupiterone/.github/.github/actions/frontend/chromatic@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          chromatic_project_token: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  magic_url:
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-arm64' }}
    needs: [migration_number]
    permissions:
      id-token: write
      statuses: write
      contents: read
      issues: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v3
      - name: setup_env
        uses: jupiterone/.github/.github/actions/setup_env@v3
        with:
          use_dev: true
      - name: build
        uses: jupiterone/.github/.github/actions/build@v3
      - name: magic_url
        uses: jupiterone/.github/.github/actions/frontend/runtime/magic_url@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          migration_number: ${{ needs.migration_number.outputs.migration }}
          magic_url_route: ${{ inputs.magic_url_route }}
