name: Triggers tests in other repos and waits for the results

inputs:
  e2e_pass_on_error:
    description: "Pass the workflow even if the E2E test fail"
    required: false
    default: false
    type: boolean
  e2e_auto:
    description: "A J1 token for kicking off cypress tests"
    required: true
  repo_name:
    description: "The name of the repo to target"
    required: true
  repo_spec:
    description: "The name of the spec(s) to target"
    required: true
  use_mock_step:
    description: "Mocks the time intensive part of the action below, useful for testing"
    default: false

outputs:
  test_passed:
    value: ${{ steps.test_results.outputs.test_passed }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: setup_env
      if: ${{ !env.TEST }}
      uses: ./.github/actions/frontend/setup_env
    - name: cypress_run
      if: ${{ !env.TEST }}
      id: cypress_run
      continue-on-error: ${{ inputs.e2e_pass_on_error == 'true' }}
      uses: convictional/trigger-workflow-and-wait@v1.6.5
      with:
        owner: JupiterOne
        repo: ${{ inputs.repo_name }}
        github_token: ${{ inputs.e2e_auto }}
        workflow_file_name: e2e_trigger.yml
        propagate_failure: ${{ inputs.e2e_pass_on_error == 'false' }}
        client_payload: '{"spec_to_run":"${{ inputs.repo_spec }}","external_pr_number":"${{ github.event.pull_request.number }}","external_pr_title":"${{ github.event.pull_request.title }}","external_pr_repo_name":"${{ github.event.repository.name }}","external_pr_branch":"${{ github.event.pull_request.head.ref }}","external_pr_author":"${{ env.COMMIT_INFO_AUTHOR }}","external_pr_sha":"${{ github.event.pull_request.base.sha }}"}'
    # We have to manually output an exit code of 0 to ensure the action passes if e2e_pass_on_error is true
    - name: pass_with_failures
      shell: bash
      if: ${{ inputs.e2e_pass_on_error == 'true' }}
      run: exit 0
    - name: set_success_vars
      shell: bash
      # Need to check previous TEST_PASSED to ensure it hasn't already failed
      # important if multiple containers are in use to ensure the correct status is reported
      if: ${{ contains(steps.cypress_run.outcome, 'success') || contains(steps.mock_step.outcome, 'success') && !contains(env.TEST_PASSED, false) }}
      run: echo "TEST_PASSED=true" >> $GITHUB_ENV
    - name: set_failure_vars
      shell: bash
      if: ${{ !contains(steps.cypress_run.outcome, 'success') || contains(steps.mock_step.outcome, 'success') }}
      run: echo "TEST_PASSED=false" >> $GITHUB_ENV
    - id: test_results
      name: test_results
      shell: bash
      run: |
        echo "test_passed=${{ env.TEST_PASSED }}" >> $GITHUB_OUTPUT