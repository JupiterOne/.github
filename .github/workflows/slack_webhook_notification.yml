name: Slack Webhook Notification

# Usage Example:
# Assuming we want to send an alert to a Slack channel when the `pr` job fails
# and we want to tag the GH user in the channel.
#
# report_failure:
#   needs: pr
#   if: failure()
#   uses: jupiterone/.github/.github/workflows/slack_webhook_notification.yml
#   with:
#     payload: |
#       {
#         "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
#         "repo": "${{ github.repository }}"
#       }
#   secrets:
#     # Tag user in the channel
#     SLACK_WEBHOOK_URL: ${{ secrets.TEMP_SLACK_WEBHOOK_FAILURE }}
#     # Tag all users in the channel with @here so we are sure this issue is seen
#     FALLBACK_SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_FAILURE_FALLBACK }}
on:
  workflow_call:
    inputs:
      payload:
        description: "A JSON payload to send to Slack"
        type: string
        required: true
    secrets:
      SLACK_WEBHOOK_URL:
        description: "A Slack webhook URL to send a message to"
        required: true
      FALLBACK_SLACK_WEBHOOK_URL:
        description: "A Slack webhook URL to send a message to if thre is no Slack user found"
        required: false

jobs:
  Slack_Notification:
    runs-on: jupiterone-dev
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - run: echo "gh_email=$(git --no-pager show -s --format=\'%ae\')" >> $GITHUB_ENV
      - id: find-slack-user
        uses: scribd/find-slack-user-action@v1
        continue-on-error: true
        with:
          slack-token: ${{ secrets.SLACK_API_TOKEN }}
          email: ${{ env.gh_email }}
      - name: "Append Slack User ID and Email to JSON"
        continue-on-error: true
        run: |
          appended_json=$(echo '${{ inputs.payload }}' | jq '.userId = "${{ steps.find-slack-user.outputs.member-id }}" | .email = "${{ env.gh_email }}"')
          echo "json=$(echo $appended_json)" >> $GITHUB_ENV
      - uses: slackapi/slack-github-action@v1.24.0
        if: steps.find-slack-user.outputs.member-id
        with:
          payload: ${{ env.json }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      # Useful if a user is not found in Slack
      - uses: slackapi/slack-github-action@v1.24.0
        if: ${{ !steps.find-slack-user.outputs.member-id }}
        with:
          payload: ${{ env.json }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.FALLBACK_SLACK_WEBHOOK_URL || secrets.SLACK_WEBHOOK_URL }}
