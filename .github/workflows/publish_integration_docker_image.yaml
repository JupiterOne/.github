name: Publish integration image to Docker Hub
# Builds and publishes graph integration project to Docker Hub

# EXAMPLE USAGE: the following is a yaml job statement using this re-usable workflow
#   publish-image:
#    uses: jupiterone/.github/.github/workflows/publish_integration_docker_image.yaml@main
#    with:
#      runs_on: ubuntu-latest
#      package-name: 'jupiterone/graph-kubernetes'
#      # https://medium.com/@sohail.ra5/github-actions-passing-boolean-input-variables-to-reusable-workflow-call-42d39bf7342e
#      push-to-registry: ${{ github.event_name != 'pull_request' }}
#    secrets:
#      # We HIGHLY recommend that these values are derived using your repos' action secrets
#      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}


on:
  workflow_call:
    inputs:
      runs_on:
        description: "What Github runner should be used (e.g. ubuntu-latest)"
        type: string
        required: false
        default: "ubuntu-latest"
      package-name:
        description: "Name of package to publish to Docker Hub"
        required: true
        type: string
      push-to-registry:
        description: "Determines if the built image should be pushed to the registry (default is `false`)"
        required: false
        default: false
        type: boolean
    secrets:
      DOCKER_USERNAME:
        description: "Docker username to authenticate and publish with"
        required: true
      DOCKER_PASSWORD:
        description: "Docker password to authenticate and publish with"
        required: true
jobs:
  build_publish_docker_image:
    name: build and publish image
    runs-on: ${{ inputs.runs_on }}
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.package-name }}
        # generate Docker tags based on the following events/attributes
        tags: |
           type=schedule
           type=ref,event=branch
           type=ref,event=pr
           type=semver,pattern={{version}}
           type=semver,pattern={{major}}.{{minor}}
           type=semver,pattern={{major}}
           type=sha
    -
      name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ inputs.push-to-registry == true }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}