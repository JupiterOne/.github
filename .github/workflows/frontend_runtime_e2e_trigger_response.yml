# previously called: standard_spa_pr.yml
name: E2E Trigger Response

# Test workflow via the following command:
# act -W .github/workflows/frontend_runtime_e2e_trigger_response

on:
  workflow_call:
    inputs:
      fallback_runner:
        description: "If true will levarege ubuntu-latest, otherwise will fall back to the J1 in-house runner"
        default: true
        type: boolean
      spec_to_run:
        description: 'Used to determine which test to run'
        type: string
        default: 'cypress/e2e/**/*.feature'
      external_pr_number:
        description: 'Used by the e2e_trigger to pass in the PR number associated with the PR that triggered the flow'
        type: string
      external_pr_title:
        description: 'Used by the e2e_trigger to give builds in Cypress the correct title associated with the PR that triggered the flow'
        type: string
      external_pr_branch:
        description: 'Used by the e2e_trigger to give builds in Cypress the correct branch name'
        type: string
      external_pr_author:
        description: 'Used by the e2e_trigger to give builds in Cypress the correct author name associated with the owner of the PR'
        type: string
      external_pr_sha:
        description: 'Used by the e2e_trigger to give builds in Cypress the correct SHA associated with the PR that triggered the flow'
        type: string
      external_pr_repo_name:
        description: 'Used by the e2e_trigger to tag builds in Cypress with the appropriate repo name (used to associate a repo with a test run)'
        type: string
      e2e_filter_tags:
        description: "Tests will be filtered based on the tags defined here"
        type: string
      e2e_artemis_config_path:
        description: 'Used to determine the path to the artemis config file'
        type: string
        default: 'cypress/artemis-config.yaml'
    secrets:
      NPM_TOKEN:
        description: "A J1 npm.com Publish token"
        required: true
      AWS_ROLE:
        description: "J1 AWS role with deploy permissions to dev"
        required: false
      CYPRESS_RECORD_KEY:
        description: "The record key associated with the project in Cypress"
        required: false
      CYPRESS_PROJECT_ID:
        description: "The project ID associated with the project in Cypress"
        required: false
      CYPRESS_PASSWORD:
        description: "The password of the E2E username"
        required: false

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

# Permissions needed to push the artifact to the S3 bucket and show the status in the PR.
permissions:
  id-token: write
  contents: read
  pull-requests: write
  statuses: write
  
jobs:
  migration_number:
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || fromJson('["jupiterone-dev", "arm64"]') }}
    outputs:
      migration: ${{ steps.migration_number.outputs.migration }}
    steps:
      - uses: actions/checkout@v2
      - id: migration_number
        uses: ./.github/actions/frontend/runtime/migration_number
