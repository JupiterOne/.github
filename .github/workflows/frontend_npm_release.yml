name: Default flow for an NPM package when its merged to mai

on:
  workflow_call:
    inputs:
      fallback_runner:
        description: "If true will leverage ubuntu-latest, otherwise will fall back to the J1 in-house runner"
        default: false
        type: boolean
      use_chromatic:
        description: "Run VRT Storybook tests with chromatic"
        default: false
        type: boolean
      use_cortex:
        description: "Runs the Cortex job. We eventually want to make this required but we need to make sure we don't break the pipeline."
        default: true
        type: boolean
    secrets:
      NPM_TOKEN:
        description: 'A J1 npm.com Publish token'
        required: true
      CHROMATIC_PROJECT_TOKEN:
        description: 'The Chromatic API token'
        required: false
      AUTO_GITHUB_PAT_TOKEN:
        description: "This is a GitHuh PAT that let's auto write back to main after npm versioning"
        required: true
      CORTEX_API_KEY:
        description: 'A key that allows us to push data to Cortex'
        # We eventually want to make this required but we need to make sure we don't break the pipeline
        # required: true

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  validate:
    # Name targeted by branch protections, do not change
    name: Validate
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-arm64' }}
    steps:
      - uses: actions/checkout@v3
      - name: setup_env
        uses: jupiterone/.github/.github/actions/setup_env@v3.0.41
        with:
          use_dev: true
      - name: validate
        uses: jupiterone/.github/.github/actions/validate@v3.0.41
      - name: build
        uses: jupiterone/.github/.github/actions/build@v3.0.41

  chromatic_publish:
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-arm64' }}
    needs: validate
    if: ${{ inputs.use_chromatic }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup_env
        uses: jupiterone/.github/.github/actions/setup_env@v3.0.41
        with:
          use_dev: true
      - name: chromatic_publish
        uses: jupiterone/.github/.github/actions/frontend/chromatic@v3.0.41
        with:
          publish_chromatic: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          chromatic_project_token: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  publish:
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-arm64' }}
    needs: validate
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTO_GITHUB_PAT_TOKEN }}
          fetch-depth: 0
      - name: setup_env
        uses: jupiterone/.github/.github/actions/setup_env@v3.0.41
      - name: build
        uses: jupiterone/.github/.github/actions/build@v3.0.41
      - name: publish
        uses: jupiterone/.github/.github/actions/frontend/npm/publish@v3.0.41
        with:
          auto_token: ${{ secrets.AUTO_GITHUB_PAT_TOKEN }}

  cortex:
    runs-on: ${{ (inputs.fallback_runner && 'ubuntu-latest') || 'scaleset-jupiterone-infra-arm64' }}
    needs: validate
    if: ${{ inputs.use_cortex }}
    steps:
      - uses: actions/checkout@v3
      - name: setup_env
        uses: jupiterone/.github/.github/actions/setup_env@v3.0.41
        with:
          use_dev: true
      - name: cortex
        uses: jupiterone/.github/.github/actions/frontend/cortex@v3.0.41
        with:
          cortex_api_key: ${{ secrets.CORTEX_API_KEY }}
